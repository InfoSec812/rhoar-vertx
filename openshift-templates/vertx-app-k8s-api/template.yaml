apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: vertx-app-k8s-api
metadata:
  annotations:
    description: A template for deploying Vert.x applications and allowing 'view' access to the k8s API for config/secrets
    iconClass: icon-vertx
    openshift.io/display-name: Vert.x App (k8s API)
    tags: vertx,http,k8s,kubernetes
  creationTimestamp: 2018-03-31T13:23:08Z
  name: vertx-app-k8s-api-deploy
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: ${NAME}
    name: ${NAME}
  spec: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${NAME}
      spec:
        containers:
        - env:
          - name: SPRING_PROFILES_ACTIVE
            value: hsql
          image: ${NAME}
          imagePullPolicy: Always
          name: ${NAME}
          ports:
          - containerPort: 8778
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      name: ${NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      name: ${NAME}
    name: ${NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: ${PIPELINES_NAMESPACE}
  userNames:
  - system:serviceaccount:${PIPELINES_NAMESPACE}:jenkins
parameters:
- description: The name assigned to all objects and the related imagestream.
  displayName: Name
  name: NAME
  required: true
- description: The project/namespace where the Jenkins executing pipelines is deployed.
  displayName: Project/Namespace for Jenkins Pipelines
  name: PIPELINES_NAMESPACE
  required: true
